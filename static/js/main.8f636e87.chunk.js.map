{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonName/PersonName.tsx","components/PeopleTable/PeopleTable.tsx","components/NewPerson/NewPerson.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonName","person","useSearchParams","searchParams","to","slug","toString","classNames","female","sex","male","name","PeopleTable","callback","people","useParams","setSearchParams","sortBy","get","sortOrder","a","b","localeCompare","flag","sort","p1","p2","handleName","handleSort","e","set","currentTarget","dataset","map","item","toLowerCase","onClick","hidden","born","died","mother","motherName","father","fatherName","NewPerson","setPeople","useState","setName","setSex","setBorn","setDied","setMotherName","setFatherName","type","placeholder","required","value","onChange","target","checked","id","filter","preventDefault","split","join","find","PeoplePage","isLoading","setIsLoading","error","setError","appliedQuery","query","setQuery","applyQuery","useCallback","debounce","newQuery","delete","visiblePeople","lowerQuery","includes","useEffect","res","person1","result","persone2","catch","finally","length","isActiveHandle","isActive","undefined","App","role","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f636e87.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './PersonName.scss';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={`/people/${person.slug}?${searchParams.toString()}`}\n      className={classNames({\n        female: person.sex === 'f',\n        male: person.sex === 'm',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonName } from '../PersonName';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n  let callback: (a: Person, b: Person) => number;\n\n  switch (sortBy) {\n    case 'name':\n    case 'sex':\n      callback = (a: Person, b: Person) => a[sortBy].localeCompare(b[sortBy]);\n      break;\n\n    case 'born':\n    case 'died':\n      callback = (a: Person, b: Person) => a[sortBy] - b[sortBy];\n      break;\n\n    default:\n      callback = () => 0;\n  }\n\n  const flag = sortOrder === 'desc' ? -1 : 1;\n\n  people.sort((p1, p2) => callback(p1, p2) * flag);\n\n  const handleName = (person: Person | undefined, name: string | null) => {\n    if (person) {\n      return <PersonName person={person} />;\n    }\n\n    return <span className=\"not-link\">{name || '-'}</span>;\n  };\n\n  const handleSort\n  = (e: React.MouseEvent<HTMLTableCellElement, MouseEvent>) => {\n    searchParams.set('sortBy', e.currentTarget.dataset.name || '');\n    searchParams.set('sortOrder', sortOrder === 'asc' ? 'desc' : 'asc');\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"\n        table\n        is-bordered\n        is-striped\n        is-hoverable\n        is-narrow\n        is-fullwidth\n      \"\n    >\n      <thead>\n        <tr>\n          {['Name', 'Sex', 'Born', 'Died'].map(item => (\n            <th\n              key={item}\n              data-name={item.toLowerCase()}\n              className={classNames('sorting-title', {\n                'sort-both': sortBy !== item.toLowerCase(),\n                'sort-asc': sortBy === item.toLowerCase()\n                  && sortOrder === 'asc',\n                'sort-desc': sortBy === item.toLowerCase()\n                  && sortOrder === 'desc',\n              })}\n              onClick={handleSort}\n            >\n              {item}\n              <span\n                className={classNames({\n                  hidden: sortBy !== item.toLowerCase(),\n                })}\n              >\n                *\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={\n              classNames({\n                'has-background-warning': slug === person.slug,\n              })\n            }\n          >\n            <td>\n              <PersonName person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {handleName(person.mother, person.motherName)}\n            </td>\n            <td>\n              {handleName(person.father, person.fatherName)}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n  setPeople: React.Dispatch<React.SetStateAction<Person[]>>,\n};\n\nexport const NewPerson: React.FC<Props> = ({ people, setPeople }) => {\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState('');\n  const [died, setDied] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [fatherName, setFatherName] = useState('');\n\n  const addPerson = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    setPeople([...people, {\n      name,\n      sex,\n      born: +born,\n      died: +died,\n      fatherName: fatherName || null,\n      motherName: motherName || null,\n      slug: name.toLowerCase().split(' ').join('-') + born,\n      mother: people.find(person => person.name === motherName),\n      father: people.find(person => person.name === fatherName),\n    }]);\n\n    setName('');\n    setSex('');\n    setBorn('');\n    setDied('');\n    setMotherName('');\n    setFatherName('');\n  };\n\n  return (\n    <form>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            required\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              required\n              checked={sex === 'm'}\n              onChange={e => setSex(e.target.value)}\n            />\n            Male\n          </label>\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              required\n              checked={sex === 'f'}\n              onChange={e => setSex(e.target.value)}\n            />\n            Female\n          </label>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"number\"\n            placeholder=\"Born\"\n            required\n            value={born}\n            onChange={e => setBorn(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"number\"\n            placeholder=\"Died\"\n            required\n            value={died}\n            onChange={e => setDied(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              name=\"mother\"\n              id=\"mother\"\n              required\n              value={motherName}\n              onChange={e => setMotherName(e.target.value)}\n            >\n              <option value=\"\">Mother</option>\n              {people.filter(person => person.sex === 'f').map(person => (\n                <option key={person.slug} value={person.name}>\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              name=\"father\"\n              id=\"father\"\n              required\n              value={fatherName}\n              onChange={e => setFatherName(e.target.value)}\n            >\n              <option value=\"\">Father</option>\n              {people.filter(person => person.sex === 'm').map(person => (\n                <option key={person.slug} value={person.name}>\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-link\" onClick={addPerson}>\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { NewPerson } from '../NewPerson';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      setSearchParams(searchParams);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.currentTarget.value);\n    applyQuery(e.currentTarget.value);\n  };\n\n  const visiblePeople = people.filter(person => {\n    const lowerQuery = appliedQuery.toLowerCase();\n\n    return person.name.toLowerCase().includes(lowerQuery)\n      || person.fatherName?.toLowerCase().includes(lowerQuery)\n      || person.motherName?.toLowerCase().includes(lowerQuery);\n  });\n\n  useEffect(() => {\n    getPeople()\n      .then(res => {\n        setPeople(res.map(person1 => {\n          const result = person1;\n\n          const mother = res.find(\n            persone2 => persone2.name === person1.motherName,\n          );\n\n          const father = res.find(\n            persone2 => persone2.name === person1.fatherName,\n          );\n\n          if (mother) {\n            result.mother = mother;\n          }\n\n          if (father) {\n            result.father = father;\n          }\n\n          return result;\n        }));\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading && <Loader />}\n\n      {error && (\n        <p\n          data-cy=\"peopleLoadingError\"\n          className=\"has-text-danger\"\n        >\n          Something went wrong\n        </p>\n      )}\n\n      {!isLoading && !error && people.length === 0 && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {!isLoading && !error && people.length !== 0 && (\n        <>\n          <div className=\"block\">\n            <div className=\"box\">\n              <NewPerson people={people} setPeople={setPeople} />\n            </div>\n          </div>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    type=\"text\"\n                    data-cy=\"filterInput\"\n                    className=\"input\"\n                    placeholder=\"Query\"\n                    value={query}\n                    onChange={handleQueryChange}\n                  />\n                </div>\n              </div>\n\n              <PeopleTable people={visiblePeople} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import {\n  NavLink,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\n\nfunction isActiveHandle(isActive: boolean) {\n  return (\n    `navbar-item ${isActive ? 'has-background-grey-lighter' : ''}` || undefined\n  );\n}\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => isActiveHandle(isActive)}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => isActiveHandle(isActive)}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}